# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        include:
          - operating-system: macos-latest
            python-version: '3.11'
            label: osx-64-py-3-11
            prefix: /Users/runner/miniconda3/envs/my-env

          - operating-system: windows-latest
            python-version: '3.11'
            label: win-64-py-3-11
            prefix: C:\Miniconda3\envs\my-env

          - operating-system: ubuntu-latest
            python-version: '3.11'
            label: linux-64-py-3-11
            prefix: /usr/share/miniconda3/envs/my-env

          - operating-system: ubuntu-latest
            python-version: '3.10'
            label: linux-64-py-3-10
            prefix: /usr/share/miniconda3/envs/my-env

          - operating-system: ubuntu-latest
            python-version: 3.9
            label: linux-64-py-3-9
            prefix: /usr/share/miniconda3/envs/my-env

          - operating-system: ubuntu-latest
            python-version: 3.8
            label: linux-64-py-3-8
            prefix: /usr/share/miniconda3/envs/my-env

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        python-version: ${{ matrix.python-version }}
        miniforge-variant: Mambaforge
        channels: conda-forge
        channel-priority: strict
        activate-environment: my-env
        use-mamba: true
    - name: Set cache date and number
      run: |
        echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
        cat .github/variables/cache_number.env >> $GITHUB_ENV
    - uses: actions/cache@v2
      with:
        path: ${{ matrix.prefix }}
        key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
      id: cache
    - name: Update environment
      run: mamba env update -n my-env -f environment.yml
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Setup
      shell: bash -l {0}
      run: |
        pip install --no-deps .
    - name: Test
      shell: bash -l {0}
      run: coverage run --omit pyfileindex/_version.py -m unittest discover tests
